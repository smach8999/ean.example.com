{"version":3,"sources":["./src/app/login/login.page.html","./src/app/auth.service.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts","./src/app/user.model.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-title>login</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n      <ion-item *ngIf=\\\"errorMessage\\\" color=\\\"danger\\\">{{ errorMessage }}</ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Username</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-button color=\\\"primary\\\" expand=\\\"full\\\" (click)=\\\"onSubmit()\\\">Submit</ion-button>\\n  </ion-content>\"","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user.model';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  //Set up the URL\n\n  private url: string;\n\n  constructor(private http: HttpClient) {\n    let l = window.location;\n    let host:string;\n    //Are we running under Ionic or in a production environment?\n    if(l.port >= '8100'){\n      host = 'localhost:3000';\n    }else{\n      host = l.hostname + ((l.port.length>0)?':' + l.port:'');\n    }\n\n    this.url = `${l.protocol}//${host}/api/auth/`;\n  }\n\n  register(user: User): Observable<User>{\n    return this.http.post<User>(this.url + 'register', user, httpOptions);\n  }\n\n  logIn(user: User): Observable<User>{\n    return this.http.post<User>(this.url + 'login', user, httpOptions);\n  }\n\n  logOut(): Observable<User>{\n    return this.http.delete<User>(this.url + 'logout');\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../auth.service';\nimport { User } from '../user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  user:User = new User();\n  errorMessage: string;\n\n  constructor(\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {}\n\n  response(response): void{\n    if(response.success===false){\n      this.errorMessage = 'Invalid Credentials';\n    }\n  //  #/users will go to user  not local host\n    if(response.success===true){\n      window.location.href='/#/users';\n    }\n  }\n\n  public onSubmit(): void{\n    this.authService.logIn(this.user).subscribe(\n      (response:any) => {\n       this.response(response);\n      }\n    );\n  }\n}","export class User{\n    _id: string;\n    email: string;\n    first_name: string;\n    last_name: string;\n    username: string;\n    password: string;\n}"],"sourceRoot":""}